function [speech_separation_net, mix_sequences_validation]  = ...
                                cnn(num_nodes,...
                                final_nodes,...
                                mixture_sequences, ...
                                mixture_validation_sequences, ... 
                                mask_sequence_training, ...
                                mask_sequence_validation, ...
                                dnn_name, ...
                                do_training)
    % 1. Reshape data which will be fed to the neural network based on
    % input
    mix_sequences_training  = mixture_sequences;
    mix_sequences_validation  = mixture_validation_sequences;
    dropoutProb = 0.2;
    num_filters = 12;
    % 2. Define a DNN with 5 layers. Input to the network being a matrix
    % of size 1x1xnum_nodes.
    % Each hidden layer having num_nodes neurons and reLU activation and finally
    % an output fully connected layer with final_nodes neurons
    % as a regression layer.
    layers_cnn = [...
    imageInputLayer([1 1 num_nodes])

    convolution2dLayer(11, num_nodes,'Stride', 3, 'Padding','same')
    batchNormalizationLayer
    leakyReluLayer
    
    convolution2dLayer(11, 2*num_nodes, 'Stride', 3, 'Padding','same')
    batchNormalizationLayer
    leakyReluLayer
    maxPooling2dLayer(3, 'Padding','same')
    
    convolution2dLayer(11, 4*num_nodes, 'Stride', 3, 'Padding', 'same' )
    batchNormalizationLayer
    leakyReluLayer
    
    convolution2dLayer(11, 4*num_nodes, 'Stride', 3, 'Padding', 'same' )
    batchNormalizationLayer
    leakyReluLayer
    maxPooling2dLayer(3, 'Padding','same')
    
    fullyConnectedLayer(final_nodes)
    leakyReluLayer
    dropoutLayer(dropoutProb)
    regressionLayer
    ];

    maxEpochs     = 5; % Number of training epochs
    miniBatchSize = 128; % mini Batch size.
    options_cnn = trainingOptions("adam", ...
        'MiniBatchSize',miniBatchSize, ...
        'MaxEpochs',maxEpochs, ...
        'InitialLearnRate',1e-3, ...
        'LearnRateSchedule','piecewise', ...
        'LearnRateDropFactor',0.9, ...
        'LearnRateDropPeriod',1, ...
        'Shuffle','every-epoch', ...
        'Plots','training-progress', ...
        'Verbose',false, ...
        "ValidationFrequency",floor(size(mix_sequences_training,4)/miniBatchSize),...
        "ValidationData",{mix_sequences_validation,mask_sequence_validation},...
        "ExecutionEnvironment", 'gpu');
    
    if do_training
%         analyzeNetwork(layers_cnn);
        speech_separation_net = trainNetwork(mix_sequences_training, ...
                                             mask_sequence_training,...
                                             layers_cnn,...
                                             options_cnn);
        save(dnn_name,'speech_separation_net'); 
    else
        s = load(dnn_name);
        speech_separation_net = s.speech_separation_net;
    end
end